sudo: required
language: generic

services:
  - docker

before_install:
  - uname -r
  - cat /etc/os-release
  - pwd
  - docker build -t ${DOCKER_ID}/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true ${DOCKER_ID}/react-test npm test

after_success:
  - docker build -t ${DOCKER_ID}/multi-client:${TRAVIS_BUILD_NUMBER} ./client
  - docker build -t ${DOCKER_ID}/multi-nginx:${TRAVIS_BUILD_NUMBER}  ./nginx
  - docker build -t ${DOCKER_ID}/multi-server:${TRAVIS_BUILD_NUMBER} ./server
  - docker build -t ${DOCKER_ID}/multi-worker:${TRAVIS_BUILD_NUMBER} ./worker
  # Log in to the docker CLI
  - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_ID}" --password-stdin
  # Take those images and push them to docker hub
  - docker push ${DOCKER_ID}/multi-client:${TRAVIS_BUILD_NUMBER}
  - docker push ${DOCKER_ID}/multi-nginx:${TRAVIS_BUILD_NUMBER}
  - docker push ${DOCKER_ID}/multi-server:${TRAVIS_BUILD_NUMBER}
  - docker push ${DOCKER_ID}/multi-worker:${TRAVIS_BUILD_NUMBER}
  # Update docker-compose.yml production file
  #- sed -i "s/{{PG_PASSWORD}}/${PG_USER}/g" docker-compose.yml
  #- sed -i "s/{{PG_PASSWORD}}/${PG_PASSWORD}/g" docker-compose.yml
  - sed -i "s/{{DOCKER_ID}}/${DOCKER_ID}/g" docker-compose.yml
  - sed -i "s/{{TRAVIS_BUILD_NUMBER}}/${TRAVIS_BUILD_NUMBER}/g" docker-compose.yml

deploy:
  skip_cleanup: true
  provider: elasticbeanstalk
  region: 'eu-west-3'
  app: 'multi-docker'
  env: 'Multidocker-env-1'
  bucket_name: 'elasticbeanstalk-eu-west-3-214983554805'
  bucket_path: 'multi-docker'
  on:
    branch: main
  access_key_id: ${AWS_ACCESS_KEY}
  secret_access_key: ${AWS_SECRET_KEY}
  
